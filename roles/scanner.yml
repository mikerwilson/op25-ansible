---
# TODO: Write readme.md about the playbook and how it works.
# TODO: move cpd-specific stuff to .kitchen.local
# FIXME: (?) rtl-sdr.rules missing from install -- device not initializing
# FIXME: simplify and just run install.sh (assuming it works after testing)
# FIXME: poorly timed restart of op25-rx service before it gets installed
- hosts: scanner
  remote_user: op25
  become: yes
  vars:
    op25_dir: /opt/op25
    op25_user: op25
    op25_root_dir: /opt
    op25_src_dir: /opt/src/op25
    op25_port: 8080
    op25_configs: /etc/op25
    sysname: OP25
    control_channel_list: "774.45625,773.90625,774.18125,774.73125"
    offset: 0
    NAC: "0x1f5"
    modulation: cqpsk
    channels: "files/channels.tsv"
    center_frequency: "774.45625"
    icecast_servername: localhost
    icecast_port: 8000
    icecast_pass: hackme
    icecast_admin_user: admin
    icecast_admin_pass: hackmeharder
    icecast_mountpoint: op25
    icecast_feed_name: scanner
    icecast_burst_size: 0
    icecast_burst_on_connect: 0
    liquidsoap_bitrate: 16
    liquidsoap_samplerate: 22050
    liquidsoap_description: op25
  gather_facts: yes
  tasks:
  # Enable sources for debian repos
  - name: enable deb-src repo (all debian OSes)
    replace:
      path: /etc/apt/sources.list
#      regexp: '^# (.*deb-src.*)'
      regexp: '^#(deb-src.*)'
      replace: '\1'
    notify:
      - force update apt cache

  - name: Flush handlers (force update of cache now if needed)
    meta: flush_handlers

  - name: update apt cache if data is older than five minutes
    apt:
      cache_valid_time: 300
      update_cache: yes

  - name: Update all packages to their latest version
    ansible.builtin.apt:
      name: "*"
      state: latest

  - name: install packages
    ansible.builtin.apt:
      pkg:
        - git
        - pulseaudio
        - pulseaudio-utils
        - nano
      state: latest

  - name: create op25 installation directories
    ansible.builtin.file:
      path: '{{ item }}'
      recurse: yes
      state: directory
    loop:
      - '{{ op25_src_dir }}'
      - '{{ op25_configs }}'

  - name: clone boatbod's op25 git repo to {{ op25_src_dir }}
    ignore_errors: yes
    ansible.builtin.git:
      repo: 'https://github.com/boatbod/op25.git'
      dest: '{{ op25_src_dir }}'
      force: no
      version: "HEAD"
      # Older commit to test rolling forward/back
#      version: "4fb337fd348732196df46ffc5765d07bc408978a"
    notify:
      - recompile op25

  # Do one initial sync to poppulate the tree.  This is a total hack.
  #   I couldn't figure out any other way to do this based on how op25 is structured
  #   (configs and compiled binaries embedded in the clone
  - name: populate op25 tree for the first time
    ansible.builtin.copy:
      src: "{{ op25_src_dir }}"
      dest: "{{ op25_root_dir }}"
      remote_src: yes
      force: no

  - name: create op25 user --> {{ op25_user }}
    ansible.builtin.user:
      name: '{{ op25_user }}'
      comment: Service account for running op25
      home: '{{ op25_dir }}'

  - name: build dependencies for gnuradio
    ansible.builtin.package:
      name:
        - gnuradio
      state: build-dep

  - name: install gnuradio and dependencies
    ansible.builtin.package:
      name:
        - gnuradio
        - gnuradio-dev
        - gr-osmosdr
        - librtlsdr-dev
        - libuhd-dev
        - libhackrf-dev
        - libitpp-dev
        - libpcap-dev
        - liborc-dev
        - cmake
        - swig
        - build-essential
        - pkg-config
        - doxygen
        - python3-numpy
        - python3-waitress
        - python3-requests
        - gnuplot-x11
      state: latest

  - name: "Place op25_python file in {{ op25_dir }}/op25/gr-op25_repeater/apps"
    ansible.builtin.copy:
      src: "files/op25_python"
      dest: "{{ op25_dir }}/op25/gr-op25_repeater/apps/op25_python"

  # TODO: May want to notify a reboot?  Requires a reboot to take effect.
  - name: place blacklist-rtl.conf
    ansible.builtin.copy:
      src: '{{ op25_dir }}/blacklist-rtl.conf'
      dest: '/etc/modprobe.d/blacklist-rtl.conf'
      mode: '0644'
      remote_src: yes
    notify: restart op25

  # TODO: make this not a shell command
  - name: fix borked airspy udev rule to allow used of airspy device when running headless
    shell: sed -i 's^TAG+="uaccess"^MODE="660", GROUP="plugdev"^g' /lib/udev/rules.d/60-libairspy0.rules
    changed_when: False

  - name: Flush handlers to compile OP25 if needed
    meta: flush_handlers

  - name: place op25.sh
    ansible.builtin.template:
      src: "files/{{ item.src }}"
      dest: "{{ op25_dir }}/op25/gr-op25_repeater/apps/{{ item.dest }}"
      mode: '0755'
      owner: "{{ op25_user }}"
      group: "{{ op25_user }}"
    loop:
      - { src: "op25.sh.j2", dest: "op25.sh" }
      - { src: 'meta.json.j2', dest: "meta.json"}
    notify:
      - restart op25

  # TODO: Fix this so user can have custom set of configs.
  - name: configure channels
    ansible.builtin.template:
      src: "{{ item.src }}"
      dest: "{{ op25_configs }}/{{ item.dest }}"
    loop:
      - { src: "{{ channels }}", dest: "channels.tsv" }
      - { src: "files/concordpd.tsv", dest: "whitelist.tsv" }
      - { src: "files/trunk.tsv.j2", dest: "trunk.tsv" }
      - { src: "files/blacklist.tsv", dest: "blacklist.tsv" }
    notify:
      - restart op25

  - name: symlink configs
    ansible.builtin.file:
      src: "{{ op25_configs }}/{{ item }}"
      dest: "{{ op25_dir }}/op25/gr-op25_repeater/apps/{{ item }}"
      state: link
      force: yes
    loop:
      - "channels.tsv"
      - "whitelist.tsv"
      - "trunk.tsv"
      - "blacklist.tsv"
    notify:
      - restart op25

  - name: install liquidsoap
    ansible.builtin.apt:
      pkg:
        - liquidsoap
      state: latest
    notify:
      - restart liquidsoap

  # only some distros have this package separately from liquidsoap.  not clean but works.
  - name: install liquidsoap-plugin-all (if found in the repo)
    ansible.builtin.apt:
      pkg:
        - liquidsoap-plugin-all
      state: latest
    ignore_errors: yes
    notify:
      - restart liquidsoap

  - name: place liquidsoap config
    ansible.builtin.template:
      src: "files/{{ item.src }}"
      dest: "{{ item.dest }}"
      mode: '0755'
    loop:
      - { src: "op25.liq.j2", dest: "{{ op25_dir }}/op25/gr-op25_repeater/apps/op25.liq" }
    notify:
      - restart liquidsoap

  - name: install icecast2
    ansible.builtin.apt:
      pkg:
        - icecast2
      state: latest
    notify:
      - restart icecast2

  - name: place icecast files
    ansible.builtin.template:
      src: "files/{{ item.src }}"
      dest: "{{ item.dest }}"
    loop:
      - { src: "icecast.xml.j2", dest: "/etc/icecast2/icecast.xml" }
    notify:
      - restart icecast2

  - name: place op25/liquidsoap service files
    ansible.builtin.template:
      src: "files/{{ item.src }}"
      dest: "/etc/systemd/system/{{ item.dest }}"
    loop:
      - { src: "op25-liq.service.j2", dest: "op25-liq.service" }
      - { src: "op25-rx.service.j2", dest: "op25-rx.service" }
    notify:
      - restart op25

  - name: recursively set permissions in {{ op25_dir }}
    ansible.builtin.file:
      path: "{{ op25_dir }}"
      state: directory
      recurse: yes
      owner: "{{ op25_user }}"
      group: "{{ op25_user }}"
    notify: restart op25


  handlers:
    - name: force update apt cache
      ansible.builtin.apt:
        cache_valid_time: 0
        update_cache: yes

    - name: clear build dir if it exists
      file:
        state: absent
        path: '{{ op25_dir }}/build'
      listen: recompile op25

    - name: create build dir
      ansible.builtin.file:
        path: '{{ item }}'
        recurse: yes
        state: directory
      loop:
        - '{{ op25_dir }}/build'
      listen: recompile op25

    # This is to work around local changes nested in op25 dir
    - name: copy op25 src files into installation directory
      ansible.builtin.copy:
        src: "{{ op25_src_dir }}"
        dest: "{{ op25_root_dir }}"
        remote_src: yes
      listen: recompile op25

    - name: run cmake
      ansible.builtin.shell: cmake ../
      args:
        chdir: "{{ op25_dir }}/build"
      listen: recompile op25

    - name: run make
      ansible.builtin.shell: make
      args:
        chdir: "{{ op25_dir }}/build"
      listen: recompile op25

    - name: run make install
      ansible.builtin.shell: make install
      args:
        chdir: "{{ op25_dir }}/build"
      listen: recompile op25

    - name: run ldconfig
      ansible.builtin.shell: ldconfig
      args:
        chdir: "{{ op25_dir }}/build"
      listen: recompile op25

    - name: enable and restart icecast2
      ansible.builtin.service:
        name: icecast2
        state: restarted
        enabled: yes
      listen: restart icecast2

    - name: enable and restart op25-rx
      ansible.builtin.systemd:
        name: op25-rx
        enabled: yes
        daemon_reload: yes
        state: restarted
      listen: restart op25

    - name: enable and restart liquidsoap
      ansible.builtin.service:
        name: op25-liq
        state: restarted
        enabled: yes
      listen:
        - restart op25
        - restart liquidsoap
