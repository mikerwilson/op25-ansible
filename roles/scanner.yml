---
- hosts: scanner
  remote_user: root
  vars:
    op25_install_dir: /opt/op25
    op25_src_dir: /opt/src/op25
  gather_facts: yes
  tasks:
  # FIXME: This is a little messy.  Try to eventually figure out a better way to do this.
  # TODO: Set up a second handler to update the cache immediately after we enable the repo.
  # May be tricky to do multiple OSes here.  This var may be handy: ansible_distribution_release
  - name: enable deb-src repo (all debian OSes)
    shell: sed -i -- 's/^# *deb-src/deb-src/' /etc/apt/sources.list

  # FIXME: Hack because ubuntu default repos are broken.  Fix this

  - name: update apt cache
    apt:
      update_cache: yes
    ignore_errors: yes

  - name: install all updates
    apt:
      upgrade: yes

  - name: install base packages
    ansible.builtin.package:
      name:
        - git
        - python3
      state: latest



  - name: build dependencies for gnuradio
    ansible.builtin.package:
      name:
        - gnuradio
      state: build-dep

  - name: install gnuradio and dependencies
    ansible.builtin.package:
      name:
        - gnuradio
        - gnuradio-dev
        - gr-osmosdr
        - librtlsdr-dev
        - libhackrf-dev
        - libitpp-dev
        - libpcap-dev
        - liborc-dev
        - cmake
        - git
        - swig
        - build-essential
        - pkg-config
        - doxygen
        - python3-numpy
        - python3-waitress
        - python3-requests
        - gnuplot-x11
      state: latest

  - name: create op25 installation directories
    ansible.builtin.file:
      path: '{{ item }}'
      recurse: yes
      state: directory
    loop:
      - '{{ op25_src_dir }}'

  # TODO: Notify op25 service restart
  - name: clone boatbod's op25 git repo
    ansible.builtin.git:
      repo: 'https://github.com/boatbod/op25.git'
      dest: '{{ op25_src_dir }}'
      force: yes

  # This step HAS to come after the git repo clone (vs before) or the clone will fail
  - name: create op25 build directory
    ansible.builtin.file:
      path: '{{ item }}'
      recurse: yes
      state: directory
    loop:
      - '{{ op25_src_dir }}/build'

  - name: 'link op25 to {{ op25_install_dir }}'
    ansible.builtin.file:
      src: '{{ op25_src_dir }}/op25'
      dest: '{{ op25_install_dir }}'
      state: link

  - name: "Place op25_python file in {{ op25_src_dir }}/op25/gr-op25_repeater/apps"
    ansible.builtin.copy:
      src: "files/op25_python"
      dest: "{{ op25_src_dir }}/op25/gr-op25_repeater/apps/op25_python"

  # TODO: May want to notify a reboot?  Requires a reboot to take effect.
  - name: place blacklist-rtl.conf
    ansible.builtin.copy:
      src: '{{ op25_src_dir }}/blacklist-rtl.conf'
      dest: '/etc/modprobe.d/blacklist-rtl.conf'
      mode: '0644'
      remote_src: yes

  - name: run cmake from build directory
    ansible.builtin.shell: cmake ../
    args:
      chdir: "{{ op25_src_dir }}/build"
      creates: "{{ op25_src_dir }}/build/op25"

  - name: run make from build dir
    ansible.builtin.shell: make
    args:
      chdir: "{{ op25_src_dir }}/build"
      creates: "{{ op25_src_dir }}/build/op25/gr-op25_repeater/swig/_op25_repeater_swig.so"
    notify:
      - run make install
      - run ldconfig

  - name: Flush handlers
    meta: flush_handlers

# TODO: Notify for op25 service restart
  - name: configure for EBRCS
    ansible.builtin.copy:
      src: "files/{{item.src}}"
      dest: "{{ op25_src_dir }}/op25/gr-op25_repeater/apps/{{ item.dest }}"
    loop:
      - { src: "ebrcs.tsv", dest: "ebrcs.tsv" }
      - { src: "concordpd.tsv", dest: "whitelist.tsv" }
      - { src: "ebrcs-trunk.tsv", dest: "trunk.tsv" }
      - { src: "blacklist.tsv", dest: "blacklist.tsv" }

# TODO: OP25 service installation

  # TODO: notify icecast2 restart on update
  - name: install icecast
    ansible.builtin.package:
      name:
        - icecast2
      state: latest

  # TODO: notify darkice restart on update
  - name: install darkice
    ansible.builtin.package:
      name:
        - darkice
      state: latest


  handlers:
    - name: run make install
      ansible.builtin.shell: make install
      args:
        chdir: "{{ op25_src_dir }}/build"

    - name: run ldconfig
      ansible.builtin.shell: ldconfig

# TODO: Service restart for op25 handler