---
# Enable sources for debian repos
- name: enable deb-src repo (all debian OSes)
  replace:
    path: /etc/apt/sources.list
    regexp: '^#(deb-src.*| deb-src.*)'
    replace: '\1'
  notify:
    - force update apt cache

- name: Flush handlers (force update of cache now if needed)
  meta: flush_handlers

- name: update apt cache if data is older than five minutes
  apt:
    cache_valid_time: 300
    update_cache: yes

- name: Update all packages to their latest version
  ansible.builtin.apt:
    name: "*"
    state: latest

- name: install packages
  ansible.builtin.apt:
    pkg:
      - git
      - pulseaudio
      - pulseaudio-utils
      - nano
    state: latest

- name: create op25 installation directories
  ansible.builtin.file:
    path: '{{ item }}'
    recurse: yes
    state: directory
  loop:
    - '{{ op25_src_dir }}'
    - '{{ op25_configs }}'

- name: clone boatbod's op25 git repo to {{ op25_src_dir }}
  ignore_errors: yes
  ansible.builtin.git:
    repo: 'https://github.com/boatbod/op25.git'
    dest: '{{ op25_src_dir }}'
    version: '{{ op25_repo_version }}'
    force: yes
  notify:
    - recompile op25

# Do one initial sync to poppulate the tree.  This is a total hack.
#   I couldn't figure out any other way to do this based on how op25 is structured
#   (configs and compiled binaries embedded in the clone)
- name: populate op25 tree for the first time
  ansible.builtin.copy:
    src: "{{ op25_src_dir }}"
    dest: "{{ op25_root_dir }}"
    remote_src: yes
    force: no

- name: create op25 user --> {{ op25_user }}
  ansible.builtin.user:
    name: '{{ op25_user }}'
    comment: Service account for running op25
    home: '{{ op25_dir }}'
    groups: "plugdev"

- name: build dependencies for gnuradio
  ansible.builtin.package:
    name:
      - gnuradio
    state: build-dep

- name: install gnuradio and dependencies
  ansible.builtin.package:
    name:
      - gnuradio
      - gnuradio-dev
      - gr-osmosdr
      - librtlsdr-dev
      - libuhd-dev
      - libhackrf-dev
      - libitpp-dev
      - libpcap-dev
      - liborc-dev
      - cmake
      - swig
      - build-essential
      - pkg-config
      - doxygen
      - python3-numpy
      - python3-waitress
      - python3-requests
      - gnuplot-x11
    state: latest

- name: "Place op25_python file in {{ op25_dir }}/op25/gr-op25_repeater/apps"
  ansible.builtin.copy:
    src: "files/op25_python"
    dest: "{{ op25_dir }}/op25/gr-op25_repeater/apps/op25_python"

- name: place rtl-sdr.rules in /etc/udev/rules.d
  ansible.builtin.copy:
    src: 'files/rtl-sdr.rules'
    dest: '/etc/udev/rules.d/20-rtlsdr.rules'
    mode: 0644
  notify: restart udev

# TODO: make this not a shell command
- name: fix borked airspy udev rule to allow used of airspy device when running headless
  shell: sed -i 's^TAG+="uaccess"^MODE="660", GROUP="plugdev"^g' /lib/udev/rules.d/60-libairspy0.rules
  changed_when: False

- name: Flush handlers to compile OP25 if needed
  meta: flush_handlers

- name: place op25.sh
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ op25_dir }}/op25/gr-op25_repeater/apps/op25.sh"
    mode: '0755'
    owner: "{{ op25_user }}"
    group: "{{ op25_user }}"
  with_first_found:
    - files:
      - op25.sh
      - op25.sh.j2
      paths:
        - "../../overrides/{{ ansible_hostname }}/"
        - ../../overrides/
        - files/
  notify:
    - restart op25
  tags: configs

- name: place meta.json
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ op25_dir }}/op25/gr-op25_repeater/apps/meta.json"
    mode: '0755'
    owner: "{{ op25_user }}"
    group: "{{ op25_user }}"
  with_first_found:
    - files:
      - meta.json
      - meta.json.j2
      paths:
        - "../../overrides/{{ ansible_hostname }}/"
        - ../../overrides/
        - files/
  notify:
    - restart op25
  tags: configs

- name: place channels.tsv
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ op25_configs }}/channels.tsv"
  with_first_found:
    - files:
      - "channels.tsv"
      paths:
        - "../../overrides/{{ ansible_hostname }}"
        - ../../overrides
        - files/
  notify:
    - restart op25
  tags: configs

- name: place trunk.tsv
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ op25_configs }}/trunk.tsv"
  with_first_found:
    - files:
      - "trunk.tsv"
      - "trunk.tsv.j2"
      paths:
        - "../../overrides/{{ ansible_hostname }}"
        - ../../overrides
        - files/
  notify:
    - restart op25
  tags: configs

- name: place whistlist.tsv
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ op25_configs }}/whitelist.tsv"
  with_first_found:
    - files:
      - "whitelist.tsv"
      paths:
        - "../../overrides/{{ ansible_hostname }}"
        - ../../overrides
        - files/
  notify:
    - restart op25
  tags: configs

- name: place blacklist
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ op25_configs }}/blacklist.tsv"
  with_first_found:
    - files:
      - "blacklist.tsv"
      paths:
        - "../../overrides/{{ ansible_hostname }}"
        - ../../overrides
        - files/
  notify:
    - restart op25
  tags: configs

- name: symlink configs
  ansible.builtin.file:
    src: "{{ op25_configs }}/{{ item }}"
    dest: "{{ op25_dir }}/op25/gr-op25_repeater/apps/{{ item }}"
    state: link
    force: yes
  loop:
    - "channels.tsv"
    - "whitelist.tsv"
    - "trunk.tsv"
    - "blacklist.tsv"
  notify:
    - restart op25
  tags: configs

- name: install liquidsoap
  ansible.builtin.apt:
    pkg:
      - liquidsoap
    state: latest
  notify:
    - restart liquidsoap

# only some distros have this package separately from liquidsoap.  not clean but works.
- name: install liquidsoap-plugin-all (if found in the repo)
  ansible.builtin.apt:
    pkg:
      - liquidsoap-plugin-all
    state: latest
  ignore_errors: yes
  notify:
    - restart liquidsoap

- name: place liquidsoap config
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ op25_dir }}/op25/gr-op25_repeater/apps/op25.liq"
    mode: '0755'
  with_first_found:
    - files:
      - "op25.liq"
      - "op25.liq.j2"
      paths:
        - "../../overrides/{{ ansible_hostname }}"
        - ../../overrides
        - files/
  notify:
    - restart liquidsoap
  tags: configs

- name: install icecast2
  ansible.builtin.apt:
    pkg:
      - icecast2
    state: latest
  notify:
    - restart icecast2

- name: place icecast config
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/icecast2/icecast.xml"
  with_first_found:
    - files:
      - "icecast.xml"
      - "icecast.xml.j2"
      paths:
        - "../../overrides/{{ ansible_hostname }}"
        - ../../overrides
        - files/
  notify:
    - restart icecast2
  tags: configs


- name: place op25/liquidsoap service files
  ansible.builtin.template:
    src: "files/{{ item.src }}"
    dest: "/etc/systemd/system/{{ item.dest }}"
  loop:
    - { src: "op25-liq.service.j2", dest: "op25-liq.service" }
    - { src: "op25-rx.service.j2", dest: "op25-rx.service" }
  notify:
    - restart op25

- name: recursively set permissions in {{ op25_dir }}
  ansible.builtin.file:
    path: "{{ op25_dir }}"
    state: directory
    recurse: yes
    owner: "{{ op25_user }}"
    group: "{{ op25_user }}"
  notify: restart op25

- name: place blacklist-rtl.conf
  ansible.builtin.copy:
    src: '{{ op25_dir }}/blacklist-rtl.conf'
    dest: '/etc/modprobe.d/blacklist-rtl.conf'
    mode: '0644'
    remote_src: yes
  notify: reboot